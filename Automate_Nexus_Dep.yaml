---
- name: install Java and net-tools
  hosts: aws
  become: true
  tasks:  
    - name: update 
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
    - name: Install java 8
      apt: name=openjdk-8-jre-headless
    - name: install net tools
      apt: name=net-tools

- name: Install nexus and unpack
  hosts: aws
  become: true
  tasks:
    - name: Download nexus
      get_url:
        url: https://download.sonatype.com/nexus/3/latest-unix.tar.gz
        dest: /opt/
      register: download_result
    - name: Check nexus folder stats 
      stat: 
        path: /opt/nexus
      register: stat_result
    - debug: msg=stat_result
    - name: unpack nexus
      unarchive: 
        src: "{{download_result.dest}}"
        dest: /opt/
        remote_src: yes
      when: not stat_result.stat.exists
    - name: Find nexus folder
      find:
        paths: /opt
        pattern: "nexus-*"
        file_type: directory
      register: find_result
    
    - name: Rename nexus folder
      shell: mv {{find_result.files[0].path}} /opt/nexus
      when: not stat_result.stat.exists

- name: Create nexus user
  hosts: aws
  become: true
  tasks: 
    - name: group nexus
      group:
        name: nexus
        state: present
    - name: create nexus user
      user:
         name: nexus
         group: nexus
    - name: make nexus user owner of nexus folder
      file:
        path: /opt/nexus
        state: directory
        owner: nexus
        group: nexus
        recurse: yes
    - name: make nexus user owner of sonatype_work folder
      file:
        path: /opt/sonatype-work
        state: directory
        owner: nexus
        group: nexus
        recurse: yes

- name: Start nexus with nexus user 
  hosts: aws
  become: true
  tasks:
    - name: set run as user nexsus
      blockinfile: 
        path: /opt/nexus/bin/nexus.rc
        block: |
          run_as_user="nexus"
    - name: start nexus
      command: /opt/nexus/bin/nexus start
    - name : verify running
      shell: ps aux | grep nexus
      register: app_status
    - debug: msg={{app_status.stdout_lines}}
    - name: check with netstat
      shell: netstat -plnt
      register: app_sta
    - debug: msg={{app_sta.stdout.lines}}
